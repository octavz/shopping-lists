var _rluiten$elm_date_extra$Date_Extra_Utils$unsafeFromString = function (dateStr) {
	var _p0 = _elm_lang$core$Date$fromString(dateStr);
	if (_p0.ctor === 'Ok') {
		return _p0._0;
	} else {
		return _elm_lang$core$Native_Utils.crashCase(
			'Date.Extra.Utils',
			{
				start: {line: 110, column: 3},
				end: {line: 112, column: 47}
			},
			_p0)('unsafeFromString');
	}
};
var _rluiten$elm_date_extra$Date_Extra_Utils$isoDayofWeekMonday = _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(_elm_lang$core$Date$Mon);
var _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne = function (year) {
	var date = A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, year, _elm_lang$core$Date$Jan, 4, 0, 0, 0, 0);
	var isoDow = _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(
		_elm_lang$core$Date$dayOfWeek(date));
	return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Day, _rluiten$elm_date_extra$Date_Extra_Utils$isoDayofWeekMonday - isoDow, date);
};
var _rluiten$elm_date_extra$Date_Extra_Utils$isoWeek = function (date) {
	var dateAsDay = A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Day, date);
	var inputYear = _elm_lang$core$Date$year(date);
	var endOfYearMaxIsoWeekDate = A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, inputYear, _elm_lang$core$Date$Dec, 29, 0, 0, 0, 0);
	var _p2 = function () {
		if (A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$SameOrAfter, date, endOfYearMaxIsoWeekDate)) {
			var nextYearIsoWeek1 = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear + 1);
			return A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$Before, date, nextYearIsoWeek1) ? {
				ctor: '_Tuple2',
				_0: inputYear,
				_1: _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear)
			} : {ctor: '_Tuple2', _0: inputYear + 1, _1: nextYearIsoWeek1};
		} else {
			var thisYearIsoWeek1 = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear);
			return A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$Before, date, thisYearIsoWeek1) ? {
				ctor: '_Tuple2',
				_0: inputYear - 1,
				_1: _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear - 1)
			} : {ctor: '_Tuple2', _0: inputYear, _1: thisYearIsoWeek1};
		}
	}();
	var year = _p2._0;
	var week1 = _p2._1;
	var daysSinceWeek1 = ((_rluiten$elm_date_extra$Date_Extra_Core$toTime(dateAsDay) - _rluiten$elm_date_extra$Date_Extra_Core$toTime(week1)) / _rluiten$elm_date_extra$Date_Extra_Core$ticksADay) | 0;
	return {
		ctor: '_Tuple3',
		_0: year,
		_1: ((daysSinceWeek1 / 7) | 0) + 1,
		_2: _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(
			_elm_lang$core$Date$dayOfWeek(date))
	};
};
var _rluiten$elm_date_extra$Date_Extra_Utils$dayList$ = F3(
	function (dayLength, date, list) {
		dayList$:
		while (true) {
			if (_elm_lang$core$Native_Utils.eq(dayLength, 0)) {
				return list;
			} else {
				var _v1 = dayLength - 1,
					_v2 = A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Day, 1, date),
					_v3 = A2(_elm_lang$core$List_ops['::'], date, list);
				dayLength = _v1;
				date = _v2;
				list = _v3;
				continue dayList$;
			}
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Utils$dayList = F2(
	function (dayLength, startDate) {
		return _elm_lang$core$List$reverse(
			A3(
				_rluiten$elm_date_extra$Date_Extra_Utils$dayList$,
				dayLength,
				startDate,
				_elm_lang$core$Native_List.fromArray(
					[])));
	});
