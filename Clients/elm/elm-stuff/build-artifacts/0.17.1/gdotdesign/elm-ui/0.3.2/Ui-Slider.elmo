var _gdotdesign$elm_ui$Ui_Slider$sendValue = function (model) {
	return {
		ctor: '_Tuple2',
		_0: model,
		_1: A2(_gdotdesign$elm_ui$Ui_Helpers_Emitter$sendFloat, model.uid, model.value)
	};
};
var _gdotdesign$elm_ui$Ui_Slider$distance = function (diff) {
	return Math.pow(
		_elm_lang$core$Basics$sqrt(diff.top),
		2) + Math.pow(diff.left, 2);
};
var _gdotdesign$elm_ui$Ui_Slider$handleClick = F2(
	function (value, model) {
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{
					drag: A2(_gdotdesign$elm_ui$Ui_Helpers_Drag$handleClick, value, model.drag)
				}),
			_1: _elm_lang$core$Platform_Cmd$none
		};
	});
var _gdotdesign$elm_ui$Ui_Slider$setValue = F2(
	function (value, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				value: A3(_elm_lang$core$Basics$clamp, 0, 100, value)
			});
	});
var _gdotdesign$elm_ui$Ui_Slider$updatePrecent = function (model) {
	return A2(_gdotdesign$elm_ui$Ui_Slider$setValue, (model.left / model.drag.dimensions.width) * 100, model);
};
var _gdotdesign$elm_ui$Ui_Slider$clampLeft = function (model) {
	return _gdotdesign$elm_ui$Ui_Slider$sendValue(
		_gdotdesign$elm_ui$Ui_Slider$updatePrecent(
			_elm_lang$core$Native_Utils.update(
				model,
				{
					left: A3(_elm_lang$core$Basics$clamp, 0, model.drag.dimensions.width, model.left)
				})));
};
var _gdotdesign$elm_ui$Ui_Slider$handleMove = F3(
	function (x, y, model) {
		var diff = A3(_gdotdesign$elm_ui$Ui_Helpers_Drag$diff, x, y, model.drag);
		var dist = _gdotdesign$elm_ui$Ui_Slider$distance(diff);
		var left = (_elm_lang$core$Native_Utils.cmp(dist, model.startDistance) > -1) ? ((model.drag.mouseStartPosition.left + diff.left) - model.drag.dimensions.left) : model.left;
		return model.drag.dragging ? _gdotdesign$elm_ui$Ui_Slider$clampLeft(
			_elm_lang$core$Native_Utils.update(
				model,
				{left: left})) : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _gdotdesign$elm_ui$Ui_Slider$increment = function (model) {
	return _gdotdesign$elm_ui$Ui_Slider$sendValue(
		A2(_gdotdesign$elm_ui$Ui_Slider$setValue, model.value + 1, model));
};
var _gdotdesign$elm_ui$Ui_Slider$decrement = function (model) {
	return _gdotdesign$elm_ui$Ui_Slider$sendValue(
		A2(_gdotdesign$elm_ui$Ui_Slider$setValue, model.value - 1, model));
};
var _gdotdesign$elm_ui$Ui_Slider$update = F2(
	function (action, model) {
		var _p0 = action;
		switch (_p0.ctor) {
			case 'Decrement':
				return _gdotdesign$elm_ui$Ui_Slider$increment(model);
			case 'Increment':
				return _gdotdesign$elm_ui$Ui_Slider$decrement(model);
			case 'Move':
				return A3(_gdotdesign$elm_ui$Ui_Slider$handleMove, _p0._0._0, _p0._0._1, model);
			case 'Click':
				return A2(_gdotdesign$elm_ui$Ui_Slider$handleClick, _p0._0, model);
			default:
				var _p2 = _p0._0._0;
				var _p1 = _p0._0._1;
				return _gdotdesign$elm_ui$Ui_Slider$clampLeft(
					_elm_lang$core$Native_Utils.update(
						model,
						{
							drag: A3(_gdotdesign$elm_ui$Ui_Helpers_Drag$lift, _p1, _p2, model.drag),
							left: _p2.left - _p1.left
						}));
		}
	});
var _gdotdesign$elm_ui$Ui_Slider$subscribe = F2(
	function (msg, model) {
		return A2(_gdotdesign$elm_ui$Ui_Helpers_Emitter$listenFloat, model.uid, msg);
	});
var _gdotdesign$elm_ui$Ui_Slider$init = function (value) {
	return {
		uid: _gdotdesign$elm_ui$Ui_Native_Uid$uid(
			{ctor: '_Tuple0'}),
		startDistance: 0,
		drag: _gdotdesign$elm_ui$Ui_Helpers_Drag$init,
		disabled: false,
		readonly: false,
		value: value,
		left: 0
	};
};
var _gdotdesign$elm_ui$Ui_Slider$Model = F7(
	function (a, b, c, d, e, f, g) {
		return {startDistance: a, drag: b, disabled: c, readonly: d, value: e, left: f, uid: g};
	});
var _gdotdesign$elm_ui$Ui_Slider$Decrement = {ctor: 'Decrement'};
var _gdotdesign$elm_ui$Ui_Slider$Increment = {ctor: 'Increment'};
var _gdotdesign$elm_ui$Ui_Slider$Click = function (a) {
	return {ctor: 'Click', _0: a};
};
var _gdotdesign$elm_ui$Ui_Slider$Lift = function (a) {
	return {ctor: 'Lift', _0: a};
};
var _gdotdesign$elm_ui$Ui_Slider$render = function (model) {
	var actions = A2(
		_gdotdesign$elm_ui$Ui$enabledActions,
		model,
		_elm_lang$core$Native_List.fromArray(
			[
				A3(_gdotdesign$elm_ui$Html_Events_Geometry$onWithDimensions, 'mousedown', false, _gdotdesign$elm_ui$Ui_Slider$Lift),
				_gdotdesign$elm_ui$Html_Events_Extra$onKeys(
				_elm_lang$core$Native_List.fromArray(
					[
						{ctor: '_Tuple2', _0: 40, _1: _gdotdesign$elm_ui$Ui_Slider$Increment},
						{ctor: '_Tuple2', _0: 38, _1: _gdotdesign$elm_ui$Ui_Slider$Decrement},
						{ctor: '_Tuple2', _0: 37, _1: _gdotdesign$elm_ui$Ui_Slider$Increment},
						{ctor: '_Tuple2', _0: 39, _1: _gdotdesign$elm_ui$Ui_Slider$Decrement}
					]))
			]));
	var position = A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(
			A3(_elm_lang$core$Basics$clamp, 0, 100, model.value)),
		'%');
	var element = A3(
		_elm_lang$html$Html$node,
		'ui-slider',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$classList(
					_elm_lang$core$Native_List.fromArray(
						[
							{ctor: '_Tuple2', _0: 'disabled', _1: model.disabled},
							{ctor: '_Tuple2', _0: 'readonly', _1: model.readonly}
						]))
				]),
			A2(
				_elm_lang$core$Basics_ops['++'],
				_gdotdesign$elm_ui$Ui$tabIndex(model),
				actions)),
		_elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				'ui-slider-bar',
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A3(
						_elm_lang$html$Html$node,
						'ui-slider-progress',
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$style(
								_elm_lang$core$Native_List.fromArray(
									[
										{ctor: '_Tuple2', _0: 'width', _1: position}
									]))
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A3(
				_elm_lang$html$Html$node,
				'ui-slider-handle',
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								{ctor: '_Tuple2', _0: 'left', _1: position}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
	return element;
};
var _gdotdesign$elm_ui$Ui_Slider$view = function (model) {
	return A2(_elm_lang$html$Html_Lazy$lazy, _gdotdesign$elm_ui$Ui_Slider$render, model);
};
var _gdotdesign$elm_ui$Ui_Slider$Move = function (a) {
	return {ctor: 'Move', _0: a};
};
var _gdotdesign$elm_ui$Ui_Slider$subscriptions = function (model) {
	return A3(_gdotdesign$elm_ui$Ui_Helpers_Drag$subscriptions, _gdotdesign$elm_ui$Ui_Slider$Move, _gdotdesign$elm_ui$Ui_Slider$Click, model.drag.dragging);
};
