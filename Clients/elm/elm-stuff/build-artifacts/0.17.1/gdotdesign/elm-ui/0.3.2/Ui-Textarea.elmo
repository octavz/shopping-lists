var _gdotdesign$elm_ui$Ui_Textarea$process = function (value) {
	return A2(
		_elm_lang$core$List$intersperse,
		A2(
			_elm_lang$html$Html$br,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[])),
		A2(
			_elm_lang$core$List$map,
			function (data) {
				return A3(
					_elm_lang$html$Html$node,
					'span-line',
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text(data)
						]));
			},
			A2(_elm_lang$core$String$split, '\n', value)));
};
var _gdotdesign$elm_ui$Ui_Textarea$setValue = F2(
	function (value, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{value: value});
	});
var _gdotdesign$elm_ui$Ui_Textarea$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Input') {
			var _p1 = _p0._0;
			return {
				ctor: '_Tuple2',
				_0: A2(_gdotdesign$elm_ui$Ui_Textarea$setValue, _p1, model),
				_1: A2(_gdotdesign$elm_ui$Ui_Helpers_Emitter$sendString, model.uid, _p1)
			};
		} else {
			return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _gdotdesign$elm_ui$Ui_Textarea$subscribe = F2(
	function (msg, model) {
		return A2(_gdotdesign$elm_ui$Ui_Helpers_Emitter$listenString, model.uid, msg);
	});
var _gdotdesign$elm_ui$Ui_Textarea$init = F2(
	function (value, placeholder) {
		return {
			placeholder: placeholder,
			uid: _gdotdesign$elm_ui$Ui_Native_Uid$uid(
				{ctor: '_Tuple0'}),
			enterAllowed: true,
			disabled: false,
			readonly: false,
			value: value
		};
	});
var _gdotdesign$elm_ui$Ui_Textarea$Model = F6(
	function (a, b, c, d, e, f) {
		return {placeholder: a, enterAllowed: b, disabled: c, readonly: d, value: e, uid: f};
	});
var _gdotdesign$elm_ui$Ui_Textarea$NoOp = {ctor: 'NoOp'};
var _gdotdesign$elm_ui$Ui_Textarea$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _gdotdesign$elm_ui$Ui_Textarea$render = function (model) {
	var actions = A2(
		_gdotdesign$elm_ui$Ui$enabledActions,
		model,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_gdotdesign$elm_ui$Html_Events_Extra$onStop, 'select', _gdotdesign$elm_ui$Ui_Textarea$NoOp),
				_elm_lang$html$Html_Events$onInput(_gdotdesign$elm_ui$Ui_Textarea$Input)
			]));
	var base = A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$placeholder(model.placeholder),
				A2(_elm_lang$html$Html_Attributes$attribute, 'id', model.uid),
				_elm_lang$html$Html_Attributes$readonly(model.readonly),
				_elm_lang$html$Html_Attributes$disabled(model.disabled),
				_elm_lang$html$Html_Attributes$value(model.value),
				_elm_lang$html$Html_Attributes$spellcheck(false)
			]),
		actions);
	var attributes = model.enterAllowed ? base : A2(
		_elm_lang$core$Basics_ops['++'],
		base,
		_elm_lang$core$Native_List.fromArray(
			[
				_gdotdesign$elm_ui$Html_Events_Extra$onEnterPreventDefault(_gdotdesign$elm_ui$Ui_Textarea$NoOp)
			]));
	return A3(
		_elm_lang$html$Html$node,
		'ui-textarea',
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$classList(
				_elm_lang$core$Native_List.fromArray(
					[
						{ctor: '_Tuple2', _0: 'disabled', _1: model.disabled},
						{ctor: '_Tuple2', _0: 'readonly', _1: model.readonly}
					]))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$textarea,
				attributes,
				_elm_lang$core$Native_List.fromArray(
					[])),
				A3(
				_elm_lang$html$Html$node,
				'ui-textarea-background',
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A3(
				_elm_lang$html$Html$node,
				'ui-textarea-mirror',
				_elm_lang$core$Native_List.fromArray(
					[]),
				_gdotdesign$elm_ui$Ui_Textarea$process(model.value))
			]));
};
var _gdotdesign$elm_ui$Ui_Textarea$view = function (model) {
	return A2(_elm_lang$html$Html_Lazy$lazy, _gdotdesign$elm_ui$Ui_Textarea$render, model);
};
